bindkey -e

alias ls="eza"
alias mkdir="mkdir -p"

export HISTFILE="$XDG_DATA_HOME/zsh_history"
export HISTSIZE=100000
export SAVEHIST=$HISTSIZE

setopt extended_history
setopt share_history

setopt hist_ignore_dups
setopt hist_ignore_space
setopt hist_ignore_all_dups

setopt append_history
setopt inc_append_history
setopt hist_reduce_blanks

autoload -U compinit
[ -d "$XDG_CACHE_HOME/zsh" ] || mkdir -p "$XDG_CACHE_HOME/zsh"
zstyle ":completion:*" cache-path "$XDG_CACHE_HOME/zsh/zcompcache"
compinit -d "$XDG_CACHE_HOME/zsh/zcompdump-$ZSH_VERSION"

zstyle ":completion:*" menu select
zstyle ":completion:*" matcher-list "r:|=*" "l:|=* r:|=*"
zstyle ":completion:*" matcher-list "m:{[:lower:][:upper:]-_}={[:upper:][:lower:]_-}" "r:|=*" "l:|=* r:|=*"
zstyle ":completion:*" special-dirs true

setopt auto_menu
setopt always_to_end
setopt complete_in_word

if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
  function zle-line-init() {
    echoti smkx
  }
  function zle-line-finish() {
    echoti rmkx
  }
  zle -N zle-line-init
  zle -N zle-line-finish
fi

autoload -U up-line-or-beginning-search
zle -N up-line-or-beginning-search

bindkey "^[[A" up-line-or-beginning-search
if [[ -n "${terminfo[kcuu1]}" ]]; then
  bindkey "${terminfo[kcuu1]}" up-line-or-beginning-search
fi

autoload -U down-line-or-beginning-search
zle -N down-line-or-beginning-search

bindkey "^[[B" down-line-or-beginning-search
if [[ -n "${terminfo[kcud1]}" ]]; then
  bindkey "${terminfo[kcud1]}" down-line-or-beginning-search
fi

if [[ -n "${terminfo[kcbt]}" ]]; then
  bindkey "${terminfo[kcbt]}" reverse-menu-complete
fi

bindkey "^[[1;5C" forward-word
if [[ -n "${terminfo[kRIT]}" ]]; then
  bindkey "${terminfo[kRIT]}" forward-word
fi

bindkey "^[[1;5D" backward-word
if [[ -n "${terminfo[kLFT]}" ]]; then
  bindkey "${terminfo[kLFT]}" backward-word
fi

setopt no_nomatch

fpath+=($ZDOTDIR/prompts/pure)
autoload -U promptinit; promptinit
prompt pure

source "$ZDOTDIR/plugins/zsh-autosuggestions/zsh-autosuggestions.zsh"
source "$ZDOTDIR/plugins/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"

export PYENV_ROOT="$XDG_DATA_HOME/pyenv"
[[ -d $PYENV_ROOT/bin ]] && export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

NVM_DIR="$XDG_DATA_HOME/nvm"
NVM_LAZY_LOAD=true
source "$ZDOTDIR/plugins/zsh-nvm/zsh-nvm.plugin.zsh"
